<?php

class admin_Model_Tutorial {

    private $id;
    private $tutorialName;
    private $groupId;
    private $htmlUrl;
    private $pdfUrl;
    private $createdDate;
    private $createdBy;
    private $status;
    private $group;
   

    public function getId() {
        return $this->id;
    }

    public function setId($id) {
        if (!is_int($id) && $id != null) {
            throw new Exception('Invliad arugmrnt in setId');
        }
        $this->id = $id;
     
    }

    public function getTutorialName() {
        return $this->tutorialName;
    }

    public function setTutorialName($tutorialName) {
        $this->tutorialName = $tutorialName;
    }

    public function getGroupId() {

        return $this->groupId;
    }

    public function setGroupId($groupId) {
       
        $this->groupId = $groupId;
    }
    
  
    
    public function setFilePdf($filename) {
        $this->pdfUrl=$filename;
    }
    
    public function getFilePdf()
    {
        return $this->pdfUrl;
    }
    
    public function setFileHtml($filename)
    {
        $this->htmlUrl=$filename;
    }

    public function getFileHtml()
    {
        return $this->htmlUrl;
    }

    public function getCreatedDate() {
        return $this->createdDate;
    }

    public function setCreatedDate($createdDate) {
        $this->createdDate = $createdDate;
    }

    public function getCreatedBy() {
        return $this->createdBy;
    }

    public function setCreatedBy($createdBy) {
        $this->createdBy = $createdBy;
    }

    public function getStatus() {
        return $this->status;
    }

    public function setStatus($status) {
        $this->status = $status;
    }

     public function getGroup($groupId)
     {
         $tDao=new admin_Model_TutorialsGroupDao();
         $Group=$tDao->getGroupWithId($groupId);
         return $Group;
     }
     
     public function getGroupName()
     {
         return $this->group;
     }


     public function setGroup($group)
     {
         $this->group=$group;
     }
     
    

    public function getTutorials($gruopId = null) {
        if (null != $gruopId && !is_int($gruopId)) {
            throw new Exception('Invalid groupId in getTutorials!');
        }
        $tdao = new admin_Model_TutorilDao();
        try {
            if (null == $gruopId) {
                $tutorials = $tdao->getAllTutorils();
            } else {
                $tutorials = $tdao->getTutorils($gruopId);
            }
            $tutorialArray = array();
            foreach ($tutorials as $t) {

                $tutorial = new admin_Model_Tutorial();
                $tutorial->setId((integer) $t['ID_Tutorials']);
                $tutorial->setCreatedBy($t['s__AddedBy']);
                $tutorial->setCreatedDate($t['s__CreationTime']);
                $tutorial->setGroupId((integer) $t['ID_TutorialsGroup']);
                $tutorial->setFilePdf($t['d__Pdf']);
                $tutorial->setFileHtml($t['d__Html']);
                $tutorial->setTutorialName($t['d__Name']);
                $tutorial->setStatus($t['d__IsActive']);
                array_push($tutorialArray, $tutorial);
            }

            return $tutorialArray;
        } catch (Exception $e) {
            throw new Exception($e->getMessage());
        }
    }

    public function changeStatus($tutorialId, $status) {
        if (!is_int($tutorialId) || !is_bool($status)) {
            throw new exception('Invlalid Argument Exception in deleteTutorial');
        }
        try {
            $tdao = new admin_Model_TutorilDao();
            $tdao->changeStatus($tutorialId, $status);
        } catch (Exception $e) {
            throw new Exception($e->getMessage());
        }
    }

    private function getArray(admin_Model_Tutorial $t) {

        $tutorials = array();
        $tutorials['ID_Tutorials'] = $t->getId();
        $tutorials['d__Name'] = $t->getTutorialName();
        $tutorials['ID_TutorialsGroup'] = $t->getGroupId();
        
        $tutorials['d__Html']=$t->getFileHtml();
        $tutorials['d__Pdf']=$t->getFilePdf();
        $tutorials['s__CreationTime'] = $t->getCreatedDate();
       
        // $tutorials['s__AddedBy'] = $t->getCreatedBy();
       // $tutorials['d__IsActive'] = $t->getStatus();
        return $tutorials;
    }
    
    
     /**
     * Adds new tutorial.
     * @param admin_Model_Tutorial $tutorial
     * @return Integer (last inserted id)
     * @throws Exception 
     */
    public function saveTutorials(admin_Model_Tutorial $tutorial)
    {
        try {
             if(null==$tutorial || $tutorial=="")
             {
                 throwException("No Data Found");
             }
             else {
                 $tutorials=$tutorial->getArray($tutorial);
         
                 $tuturialDao=new admin_Model_TutorilDao();
                 $result=$tuturialDao->save($tutorials); 
                 return $result;
             }
        } catch (Zend_Db_Table_Exception $exc) {
            echo $exc->getMessage();
        }
    
    }
       /**
     * Edit tutorial.
     * @param admin_Model_Tutorial $tutorial
     * @return Integer (last inserted id)
     * @throws Exception 
     */
    
    public function editTutorials(admin_Model_Tutorial $tutorial)
    {
        try {
           if(null==$tutorial || $tutorial=="")
             {
                 throwException("No Data Found");
             }
             else {
                 $tutorials=$tutorial->getArray($tutorial);
                 $tuturialDao=new admin_Model_TutorilDao();
                 $result=$tuturialDao->edit($tutorials); 
                 return $result;
             }
        } catch (Exception $exc) {
            echo $exc->getMessage();
        }
            
    }
    
    public function listTutorials()
    {
        $tutorialLists=array();
        try {
             $tutorialDao=new admin_Model_TutorilDao();
             $tutorials=$tutorialDao->getAllTutorils();
          
             if($tutorials)
             {
                 foreach ($tutorials as $t)
                 {
                     $tutorial=new admin_Model_Tutorial();
                     $tutorial->setId((integer)$t['ID_Tutorials']);
                     $tutorial->setTutorialName($t['d__Name']);
                     $tutorial->setGroupId((integer)$t['ID_TutorialsGroup']);
                     $group=$tutorial->getGroup($t['ID_TutorialsGroup']);
                     $tutorial->setGroup($group);
                     $tutorial->setCreatedBy($t['s__AddedBy']);
                     $tutorial->setCreatedDate($t['s__CreationTime']);
                     $tutorial->setFileHtml($t['d__Html']);
                     $tutorial->setFilePdf($t['d__Pdf']);
                     array_push($tutorialLists, $tutorial);
                   
                 }
                 return $tutorialLists;
             }
             
        } catch (Exception $exc) {
            echo $exc->getMessage();
        }
        }
        
        
        public function getTutorialDetail($tutorialId)
        {
            
            try {
                if(null==$tutorialId || $tutorialId == "")
                {
                    throw new Exception;
                }
                else
                {
                    $tutorialdao=new admin_Model_TutorilDao();
                    $tutorialDetails=$tutorialdao->findTutorial($tutorialId);
                    $tutorial=new admin_Model_Tutorial();
                    $tutorial->setId((integer)$tutorialDetails['ID_Tutorials']);
                    $tutorial->setGroupId($tutorialDetails['ID_TutorialsGroup']);
                    $tutorial->setTutorialName($tutorialDetails['d__Name']);
                    $tutorial->setCreatedDate($tutorialDetails['s__CreationTime']);
                    $tutorial->setFileHtml($tutorialDetails['d__Html']);
                    $tutorial->setFilePdf($tutorialDetails['d__Pdf']);
                    $tutorial->setGroup($tutorial->getGroup($tutorialDetails['ID_TutorialsGroup']));
                    return $tutorial;
                }
                
            } catch (Exception $exc) {
                echo $exc->getMessage();
            }
                }

    public function getGroups() {

        $tdao = new admin_Model_TutorialsGroupDao();
        try {
            $tutorilGroups = $tdao->getGroups();
            $groupArray = array();
            foreach ($tutorilGroups as $t) {

                $tutorial = new admin_Model_Tutorial();
                $tutorial->setId((integer) $t['ID_Tutorials']);
                $tutorial->setCreatedBy($t['s__AddedBy']);
                $tutorial->setCreatedDate($t['s__CreationTime']);
                $tutorial->setGroupId((integer) $t['ID_TutorialsGroup']);
                $tutorial->setFilePdf($t['d__Pdf']);
                $tutorial->setFileHtml($t['d__Html']);
                $tutorial->setTutorialName($t['d__Name']);
                $tutorial->setStatus($t['d__IsActive']);
                array_push($groupArray, $tutorial);
            }

            return $groupArray;
        } catch (Exception $e) {
            throw new Exception($e->getMessage());
        }
    }
    
    
    //Delete Tutorial
    
    public function deleteTutorial($idTutorial)
    {
   
          if (null == $idTutorial || !is_int($idTutorial)) {
               throw new Exception("Invalid argument exception in find country");
          }
         
          $tutorialDao=new admin_Model_TutorilDao();
          $tutorialDao->deleteTutorial($idTutorial);
          
       
        }
        
    //Download Tutorial
    public function getFilename($idTutorial)
    {
         $tDao=new admin_Model_TutorilDao();
         $files=$tDao->getFilesUploaded($idTutorial);
       
         return $files;
    }

        //Retrieve JSON data
    public static function getJson(admin_Model_Tutorial $tutorialDetails){
        $tutorials = array();
        $tutorials['id'] = $tutorialDetails->getId();
        $tutorials['tutorialname'] = $tutorialDetails->getTutorialName();
        $tutorials['uploadeddate'] = $tutorialDetails->getCreatedDate();
        $tutorials['groupname'] = $tutorialDetails->getGroupId();
        $tutorials['htmlfile']=$tutorialDetails->getFileHtml();
        $tutorials['pdffile']=$tutorialDetails->getFilePdf();
      
        return Zend_Json::encode($tutorials);
    }

}

?>
