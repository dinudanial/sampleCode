<?php

/* Author                : Renesankar(rene@toobler.com)
 * Company               : Toobler
 * Email:                : info@toobler.com
 * Web site              : http://www.toobler.com
 * Created               : 27/02/2012
 * Description       	 : 
 * ==============================================================================================
 * Change History:
 * ----------------------------------------------------------------------------------------------
 * Sl.No.  Date   Author   Description
 * ----------------------------------------------------------------------------------------------
 * 	1
 *
 *
 * ----------------------------------------------------------------------------------------------
 *
 */

class admin_Model_Region {

    private $id;
    private $region;
    private $creationAccount;
    private $modificationAccount;
    private $order;
    private $createDate;
    private $modifiedDate;
    private $countries;

    public function getId() {
        return $this->id;
    }

    public function setId($id) {
        $this->id = $id;
    }

    public function getRegion() {
        return $this->region;
    }

    public function setRegion($region) {
        $this->region = $region;
    }

    public function getCreationAccount() {
        return $this->creationAccount;
    }

    public function setCreationAccount($creationAccount) {
        $this->creationAccount = $creationAccount;
    }

    public function getModificationAccount() {
        return $this->modificationAccount;
    }

    public function setModificationAccount($modificationAccount) {
        $this->modificationAccount = $modificationAccount;
    }

    public function getOrder() {
        return $this->order;
    }

    public function setOrder($order) {
        $this->order = $order;
    }

    public function getCreateDate() {
        return $this->createDate;
    }

    public function setCreateDate($createDate) {
        $this->createDate = $createDate;
    }

    public function getModifiedDate() {
        return $this->modifiedDate;
    }

    public function setModifiedDate($modifiedDate) {
        $this->modifiedDate = $modifiedDate;
    }

    public function getCountries() {
        return $this->countries;
    }

    public function setCountries(array $countries) {
        $this->countries = $countries;
    }

    /**
     * Select all regions.
     * @return array $regionList
     * @throws Exception 
     */
    public function getAllRegions() {

        try {
            $regionList = array();
            $rd = new admin_Model_RegionDao();
            $regions = $rd->getRegions();
        
            if ($regions) {
                foreach ($regions as $r) {
                    $region = new admin_Model_Region();
                    $region->setId($r['ID_Region']);    
                    $region->setRegion($r['d__RegionName']);
                    $region->setOrder($r['d__RegionOrder']);
                    $region->setCountries($this->getCountryList((integer)$r['ID_Region']));
                    array_push($regionList, $region);
                }
                   
                return $regionList;
            } else {
                
                throw new Exception("Empty data set");
            }

            //return $regions;
        } catch (Exception $e) {
            throw new Exception($e->getMessage());
        }
    }

    /**
     * Select region for a given id.
     * @param Integer $id
     * @return \admin_Model_Region
     * @throws Exception 
     */
    public function getRegionData($id) {
        if (null == $id || !is_int($id)) {
            throw new Exception("Invalid argument exception in getRegionData");
        }
        return $this;
    }

    /**
     * Returns list of countries for a given region.
     * @param integer $regionId
     * @return array $countries
     * @throws Exception 
     */
    public function getCountryList($regionId) {
        if (null == $regionId || !is_int($regionId)) {
            throw new Exception("Invalid argument exception in getCountryList");
        }
        try {
            $countries = array();
            $c = new admin_Model_CountryDao();
            $countryList = $c->getCountries($regionId);
            if ($countryList) {
                foreach ($countryList as $c){
                    $country = new admin_Model_Country();
                    $country->setId((integer)$c['ID_Country']);
                    $country->setCountry($c['d__CountryName']);
                    $country->setCommentary($c['d__Commentary']);
                    $country->setAdmittedType($c['d__Applicable_Admitted']);
                    $country->setAdmittedEntry($c['d__Admitted']);
                    $country->setStandingDataApplicable((integer)$c['d__Applicable_StandingData']);
                    $country->setAuthorised($c['d__Authorised']);
                    $country->setLockAdmitted((boolean)$c['d__LockAdmitted']);
                    $country->setResidencePullDown((boolean)$c['d__ResidencePullDown']);
                    $country->setLpan((boolean)$c['d__LPAN']);
                    array_push($countries, $country);
                }
                return $countries;
            } else {
                throw new Exception("Empty data set");
            }
            
        } catch (Exception $e) {
            throw new Exception($e->getMessage());
        }
    }
    
    
    
    public function getRegionlist(){
        try{
            $rd = new admin_Model_RegionDao();
            $regions = $rd->getRegionName();  
           if($regions)
             {
              
                  return $regions;
             }
            else
                 throw new Exception("Empty Data Set");
        }
        catch (Exception $e){
            $e->getMessage();
        }
    }

}

