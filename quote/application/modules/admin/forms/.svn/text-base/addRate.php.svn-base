<?php

class admin_Form_addRate extends Zend_Form
{
	public function init()
    {
       $baseUrl = Zend_Controller_Front::getInstance()->getBaseUrl();
       $this->setAction($baseUrl.'/admin/Rate/save');
       $this->setAttrib('id', 'addRate')  ;
       $this->setAttrib('class', 'form');
       $this->setMethod('post');
	
       $masterRateId = new Zend_Form_Element_Text('masterRateId');
       $masterRateId->setLabel('Master Rate Id')
                    ->setValue("new")
                    ->setAttrib("readonly","readonly")
                    ->setAttrib("class", "required");
                
       $taxType = new Zend_Form_Element_Text('taxType');
       $taxType->setLabel('Type of Tax')
                    ->addFilter('StripTags')
                    ->addFilter('StringTrim')
                    ->setRequired(true)
                    ->addValidator('NotEmpty')
                    ->setAttrib("class", "required");
                      
        $region= new Zend_Form_Element_Select('newRateRegion');
        $region->setLabel('Region')
        	   ->setAttrib("class", "required");
                   
     	$r= new admin_Model_Region();
        $regions = $r->getRegionlist();
        $region->addMultiOption("select",'---Select---');
        foreach ($regions as $rx)
        {                
            $region->addMultiOption($rx['ID_Region'],$rx['d__RegionName']);
        }
        $region->addValidator('NotEmpty');
        $region->setRequired(true);
        
        $country= new Zend_Form_Element_Select('newRatecountry');
        $country->setLabel('Country')
                    ->addValidator('NotEmpty')
                    ->setRequired(true)
                    ->setAttrib("class", "required");
        
        
        $curency= new Zend_Form_Element_Select('currency');
        $curency->setLabel('Currency')
                    
                    ->setAttrib("class", "required");
        $result = admin_Model_Util::getCurrency();
        $curency->setMultiOptions($result)
                    ->addValidator('NotEmpty')
                    ->setRequired(true);
        
        $insuranceClass= new Zend_Form_Element_Select('newRateinsuranceclass');
    	$insuranceResult = admin_Model_Util::getInsuranceClasses();

        $insuranceClass->setLabel('Insurance Class')
        		->setMultiOptions($insuranceResult)
                        ->setRequired(true)
                        ->addValidator('NotEmpty')
        		->setAttrib("class", "required");
        
        $taxSubClass = new Zend_Form_Element_Text('taxSubClass');
        $taxSubClass->setLabel('Tax Sub Class')       		
        		->addFilter('StripTags')
        		->addFilter('StringTrim');
                        
                
        $tertiary = new Zend_Form_Element_Text('tertiary');
        $tertiary->setLabel('Tertiary')       		
        		->addFilter('StripTags')
        		->addFilter('StringTrim');
                        
                
        $defaultSubClass = new Zend_Form_Element_Text('defaultSubclasOrTertiary');
        $defaultSubClass->setLabel('Default Subclass / Tertiary')
        		->setAttrib("readonly","readonly");
                        
        
        $enabled = new Zend_Form_Element_Checkbox('enabled'); 
        $enabled->setLabel('Enabled');
        
        $noAutoCreate = new Zend_Form_Element_Checkbox('noAutoCreate'); 
        $noAutoCreate->setLabel('No Auto Create');
        
        $hiddendefaultsubclass = new Zend_Form_Element_Hidden ('defaultSubClassHidden'); 
        
        $button = new Zend_Form_Element_Button("save");
        $button->setLabel('Save');
        
        $cancel = new Zend_Form_Element_Button("CancelButton");
        $cancel->setLabel('Cancel');
        
        $this->addElements(array(
            $masterRateId,$taxType,$region,
            $country,$curency,$insuranceClass,$taxSubClass,
            $tertiary,$defaultSubClass,$enabled,
            $noAutoCreate,$hiddendefaultsubclass,$button,$cancel));        	  	
    }
}